


alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']



#Encrypt function
'''
def encrypt(original_text,shift_number):
    text_display = ""
    for letter in original_text:
        shift_position = alphabet.index(letter) + shift_number
        shift_position %= len(alphabet)
        text_display += alphabet[shift_position]
    print(f"Your encoded result is {text_display}")

#Dycrypt function

def decrypt(original_text, shift_number):
    text_display = ""
    for letter in original_text:
        shift_position = alphabet.index(letter) - shift_number
        shift_position %= len(alphabet)
        text_display += alphabet[shift_position]
    print(f"Your decrypt result is {text_display}")
'''

game_over = True
while game_over == True:
    cipher = input("Encrypt (enc) or dycrypt? (dyc)\n").lower()
    text = input("What do you want to say\n").lower()
    shift = int(input("How many numbers do you want to shift\n"))

    def encode_decode(original_text, shift_number, enc_dec):
        if enc_dec == "dyc": 
            text_display = ""
            for letter in original_text:
                shift_position = alphabet.index(letter) - shift_number
                shift_position %= len(alphabet)
                text_display += alphabet[shift_position]
            print(f"Your decrypt result is {text_display}")

        else:
            text_display = ""
            for letter in original_text:
                shift_position = alphabet.index(letter) + shift_number
                shift_position %= len(alphabet)
                text_display += alphabet[shift_position]
            print(f"Your decrypt result is {text_display}") 
    encode_decode(original_text = text, shift_number = shift, enc_dec = cipher)

    start_over = input("Do you want to do it again?: y/n").lower()
    if start_over == "y":
        continue

    else:
        if start_over == "n":

            
            print("Thank you for using Radian's decipher")
            game_over = False


    
